
# Source File
SRCS_1 := $(wildcard *.cpp *.cc *.c) $(INCLUDE_SRCFILE)
SRCS := $(filter-out $(EXCLUDE_SRCFILE), $(SRCS_1))

# Object File
OBJS_1 := $(patsubst %.cpp,%.$(OEXT), $(SRCS))
OBJS_2 := $(patsubst %.cc,%.$(OEXT),  $(OBJS_1))
OBJS_3 := $(patsubst %.c,%.$(OEXT),   $(OBJS_2))
OBJS := $(addprefix $(BUILD_DIR)$(X)$(MODULE)$(X), $(notdir $(OBJS_3)))

# Dependence File
DEPS_1 := $(patsubst %.cpp,%.$(DEXT), $(SRCS))
DEPS_2 := $(patsubst %.cc,%.$(DEXT),  $(DEPS_1))
DEPS_3 := $(patsubst %.c,%.$(DEXT),   $(DEPS_2))
DEPS := $(addprefix $(BUILD_DIR)$(X)$(MODULE)$(X), $(notdir $(DEPS_3)))

# Dependent Files
-include $(DEPS)

# Make rules
$(BUILD_DIR)$(X)$(MODULE)$(X)%.$(OEXT):%.cc
	@echo "[CCPP ] " $@
	$(CCPP) -c  $(CFLAGS) -o $@ $<

$(BUILD_DIR)$(X)$(MODULE)$(X)%.$(OEXT):%.cpp
	@echo "[CCPP ] " $@
	$(CCPP) -c  $(CFLAGS) -o $@ $<

$(BUILD_DIR)$(X)$(MODULE)$(X)%.$(OEXT):%.c
	@echo "[CC   ] " $@
	$(CC)   -c  $(CFLAGS) -o $@ $<

$(BUILD_DIR)$(X)$(MODULE)$(X)%.$(DEXT):%.cc
	@echo "[DEP  ] " $@
	echo -n $(BUILD_DIR)$(X)$(MODULE)$(X) > $@
	$(CCPP) -MM $(CFLAGS) $< >> $@

$(BUILD_DIR)$(X)$(MODULE)$(X)%.$(DEXT):%.cpp
	@echo "[DEP  ] " $@
	echo -n $(BUILD_DIR)$(X)$(MODULE)$(X) > $@
	$(CCPP) -MM $(CFLAGS) $< >> $@

$(BUILD_DIR)$(X)$(MODULE)$(X)%.$(DEXT):%.c
	@echo "[DEP  ] " $@
	echo -n $(BUILD_DIR)$(X)$(MODULE)$(X) > $@
	$(CC)   -MM $(CFLAGS) $< >> $@

# Rules
.PHONY: clean

SUBMODULE_DEP := $(addprefix dep_, $(SUBMODULE) )
SUBMODULE_OBJ := $(addprefix obj_, $(SUBMODULE) )

depend: $(DEPS) $(SUBMODULE_DEP)

$(SUBMODULE_DEP):
	$(MKDIR) $(BUILD_DIR)$(X)$(MODULE)$(X)$(patsubst dep_%,%, $@)
	$(MAKE) -C $(patsubst dep_%, %, $@) depend

objs: $(OBJS) $(SUBMODULE_OBJ)

$(SUBMODULE_OBJ):
	$(MAKE) -C $(patsubst obj_%, %, $@) objs

clean:
	$(RMDIR) $(BUILD_DIR)
	$(RMDIR) $(BIN_DIR)
